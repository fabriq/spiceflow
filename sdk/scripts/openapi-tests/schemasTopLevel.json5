[
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/links",
    "schema": {
      "properties": {
        "android": {
          "description": "The Android destination URL for the short link for Android device targeting.",
          "nullable": true,
          "type": "string",
        },
        "archived": {
          "default": false,
          "description": "Whether the short link is archived.",
          "type": "boolean",
        },
        "comments": {
          "description": "The comments for the short link.",
          "nullable": true,
          "type": "string",
        },
        "description": {
          "description": "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "doIndex": {
          "default": false,
          "description": "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex",
          "type": "boolean",
        },
        "domain": {
          "description": "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains).",
          "maxLength": 190,
          "type": "string",
        },
        "expiredUrl": {
          "description": "The URL to redirect to when the short link has expired.",
          "nullable": true,
          "type": "string",
        },
        "expiresAt": {
          "description": "The date and time when the short link will expire at.",
          "nullable": true,
          "type": "string",
        },
        "externalId": {
          "description": "This is the ID of the link in your database. If set, it can be used to identify the link in the future. Must be prefixed with `ext_` when passed as a query parameter.",
          "example": "123456",
          "maxLength": 255,
          "minLength": 1,
          "nullable": true,
          "type": "string",
        },
        "geo": {
          "$ref": "#/components/schemas/linkGeoTargeting",
        },
        "image": {
          "description": "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "ios": {
          "description": "The iOS destination URL for the short link for iOS device targeting.",
          "nullable": true,
          "type": "string",
        },
        "key": {
          "description": "The short link slug. If not provided, a random 7-character slug will be generated.",
          "maxLength": 190,
          "type": "string",
        },
        "password": {
          "description": "The password required to access the destination URL of the short link.",
          "nullable": true,
          "type": "string",
        },
        "prefix": {
          "description": "The prefix of the short link slug for randomly-generated keys (e.g. if prefix is `/c/`, generated keys will be in the `/c/:key` format). Will be ignored if `key` is provided.",
          "type": "string",
        },
        "programId": {
          "description": "The ID of the program the short link is associated with.",
          "nullable": true,
          "type": "string",
        },
        "proxy": {
          "default": false,
          "description": "Whether the short link uses Custom Social Media Cards feature.",
          "type": "boolean",
        },
        "publicStats": {
          "default": false,
          "deprecated": true,
          "description": "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible.",
          "type": "boolean",
        },
        "ref": {
          "description": "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "rewrite": {
          "default": false,
          "description": "Whether the short link uses link cloaking.",
          "type": "boolean",
        },
        "tagId": {
          "deprecated": true,
          "description": "The unique ID of the tag assigned to the short link. This field is deprecated â€“ use `tagIds` instead.",
          "nullable": true,
          "type": "string",
        },
        "tagIds": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          ],
          "description": "The unique IDs of the tags assigned to the short link.",
          "example": [
            "clux0rgak00011...",
          ],
        },
        "tagNames": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          ],
          "description": "The unique name of the tags assigned to the short link (case insensitive).",
        },
        "title": {
          "description": "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "trackConversion": {
          "default": false,
          "description": "Whether to track conversions for the short link.",
          "type": "boolean",
        },
        "url": {
          "description": "The destination URL of the short link.",
          "example": "https://google.com",
          "type": "string",
        },
        "utm_campaign": {
          "description": "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_content": {
          "description": "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_medium": {
          "description": "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_source": {
          "description": "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_term": {
          "description": "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "video": {
          "description": "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "webhookIds": {
          "description": "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data.",
          "items": {
            "type": "string",
          },
          "nullable": true,
          "type": "array",
        },
      },
      "required": [
        "url",
      ],
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "get",
    "path": "/links",
    "responseCode": "200",
    "schema": {
      "items": {
        "$ref": "#/components/schemas/LinkSchema",
      },
      "type": "array",
    },
    "type": "response",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "description": "The domain to filter the links by. E.g. `ac.me`. If not provided, all links for the workspace will be returned.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "deprecated": true,
      "description": "Deprecated. Use `tagIds` instead. The tag ID to filter the links by.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "anyOf": [
        {
          "type": "string",
        },
        {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
      ],
      "description": "The tag IDs to filter the links by.",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "anyOf": [
        {
          "type": "string",
        },
        {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
      ],
      "description": "The unique name of the tags assigned to the short link (case insensitive).",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "description": "The search term to filter the links by. The search term will be matched against the short link slug and the destination url.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "description": "The user ID to filter the links by.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "default": "false",
      "description": "Whether to include archived links in the response. Defaults to `false` if not provided.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "default": "false",
      "deprecated": true,
      "description": "DEPRECATED. Filter for links that have at least one tag assigned to them.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "default": "createdAt",
      "description": "The field to sort the links by. The default is `createdAt`, and sort order is always descending.",
      "enum": [
        "createdAt",
        "clicks",
        "lastClicked",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "default": 1,
      "description": "The page number for pagination.",
      "example": 1,
      "exclusiveMinimum": true,
      "minimum": 0,
      "type": "number",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links",
    "schema": {
      "default": 100,
      "description": "The number of items per page.",
      "example": 50,
      "exclusiveMinimum": true,
      "maximum": 100,
      "minimum": 0,
      "type": "number",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "get",
    "path": "/links/count",
    "responseCode": "200",
    "schema": {
      "description": "The number of links matching the query.",
      "type": "number",
    },
    "type": "response",
  },
  {
    "method": "get",
    "path": "/links/count",
    "schema": {
      "description": "The domain to filter the links by. E.g. `ac.me`. If not provided, all links for the workspace will be returned.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/count",
    "schema": {
      "deprecated": true,
      "description": "Deprecated. Use `tagIds` instead. The tag ID to filter the links by.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/count",
    "schema": {
      "anyOf": [
        {
          "type": "string",
        },
        {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
      ],
      "description": "The tag IDs to filter the links by.",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/count",
    "schema": {
      "anyOf": [
        {
          "type": "string",
        },
        {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
      ],
      "description": "The unique name of the tags assigned to the short link (case insensitive).",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/count",
    "schema": {
      "description": "The search term to filter the links by. The search term will be matched against the short link slug and the destination url.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/count",
    "schema": {
      "description": "The user ID to filter the links by.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/count",
    "schema": {
      "default": "false",
      "description": "Whether to include archived links in the response. Defaults to `false` if not provided.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/count",
    "schema": {
      "default": "false",
      "deprecated": true,
      "description": "DEPRECATED. Filter for links that have at least one tag assigned to them.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/count",
    "schema": {
      "anyOf": [
        {
          "enum": [
            "domain",
          ],
          "type": "string",
        },
        {
          "enum": [
            "tagId",
          ],
          "type": "string",
        },
        {
          "enum": [
            "userId",
          ],
          "type": "string",
        },
      ],
      "description": "The field to group the links by.",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/info",
    "schema": {
      "description": "The domain of the link to retrieve. E.g. for `d.to/github`, the domain is `d.to`.",
      "minLength": 1,
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/info",
    "schema": {
      "description": "The key of the link to retrieve. E.g. for `d.to/github`, the key is `github`.",
      "minLength": 1,
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/info",
    "schema": {
      "description": "The unique ID of the short link.",
      "example": "clux0rgak00011...",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/links/info",
    "schema": {
      "description": "This is the ID of the link in the your database.",
      "example": "123456",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "patch",
    "path": "/links/{linkId}",
    "schema": {
      "properties": {
        "android": {
          "description": "The Android destination URL for the short link for Android device targeting.",
          "nullable": true,
          "type": "string",
        },
        "archived": {
          "default": false,
          "description": "Whether the short link is archived.",
          "type": "boolean",
        },
        "comments": {
          "description": "The comments for the short link.",
          "nullable": true,
          "type": "string",
        },
        "description": {
          "description": "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "doIndex": {
          "default": false,
          "description": "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex",
          "type": "boolean",
        },
        "domain": {
          "description": "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains).",
          "maxLength": 190,
          "type": "string",
        },
        "expiredUrl": {
          "description": "The URL to redirect to when the short link has expired.",
          "nullable": true,
          "type": "string",
        },
        "expiresAt": {
          "description": "The date and time when the short link will expire at.",
          "nullable": true,
          "type": "string",
        },
        "externalId": {
          "description": "This is the ID of the link in your database. If set, it can be used to identify the link in the future. Must be prefixed with `ext_` when passed as a query parameter.",
          "example": "123456",
          "maxLength": 255,
          "minLength": 1,
          "nullable": true,
          "type": "string",
        },
        "geo": {
          "$ref": "#/components/schemas/linkGeoTargeting",
        },
        "image": {
          "description": "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "ios": {
          "description": "The iOS destination URL for the short link for iOS device targeting.",
          "nullable": true,
          "type": "string",
        },
        "key": {
          "description": "The short link slug. If not provided, a random 7-character slug will be generated.",
          "maxLength": 190,
          "type": "string",
        },
        "password": {
          "description": "The password required to access the destination URL of the short link.",
          "nullable": true,
          "type": "string",
        },
        "prefix": {
          "description": "The prefix of the short link slug for randomly-generated keys (e.g. if prefix is `/c/`, generated keys will be in the `/c/:key` format). Will be ignored if `key` is provided.",
          "type": "string",
        },
        "programId": {
          "description": "The ID of the program the short link is associated with.",
          "nullable": true,
          "type": "string",
        },
        "proxy": {
          "default": false,
          "description": "Whether the short link uses Custom Social Media Cards feature.",
          "type": "boolean",
        },
        "publicStats": {
          "default": false,
          "deprecated": true,
          "description": "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible.",
          "type": "boolean",
        },
        "ref": {
          "description": "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "rewrite": {
          "default": false,
          "description": "Whether the short link uses link cloaking.",
          "type": "boolean",
        },
        "tagId": {
          "deprecated": true,
          "description": "The unique ID of the tag assigned to the short link. This field is deprecated â€“ use `tagIds` instead.",
          "nullable": true,
          "type": "string",
        },
        "tagIds": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          ],
          "description": "The unique IDs of the tags assigned to the short link.",
          "example": [
            "clux0rgak00011...",
          ],
        },
        "tagNames": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          ],
          "description": "The unique name of the tags assigned to the short link (case insensitive).",
        },
        "title": {
          "description": "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "trackConversion": {
          "default": false,
          "description": "Whether to track conversions for the short link.",
          "type": "boolean",
        },
        "url": {
          "description": "The destination URL of the short link.",
          "example": "https://google.com",
          "type": "string",
        },
        "utm_campaign": {
          "description": "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_content": {
          "description": "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_medium": {
          "description": "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_source": {
          "description": "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_term": {
          "description": "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "video": {
          "description": "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "webhookIds": {
          "description": "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data.",
          "items": {
            "type": "string",
          },
          "nullable": true,
          "type": "array",
        },
      },
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "method": "patch",
    "path": "/links/{linkId}",
    "schema": {
      "description": "The id of the link to update. You may use either `linkId` (obtained via `/links/info` endpoint) or `externalId` prefixed with `ext_`.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "delete",
    "path": "/links/{linkId}",
    "responseCode": "200",
    "schema": {
      "properties": {
        "id": {
          "description": "The ID of the link.",
          "type": "string",
        },
      },
      "required": [
        "id",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "method": "delete",
    "path": "/links/{linkId}",
    "schema": {
      "description": "The id of the link to delete. You may use either `linkId` (obtained via `/links/info` endpoint) or `externalId` prefixed with `ext_`.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/links/bulk",
    "schema": {
      "items": {
        "properties": {
          "android": {
            "description": "The Android destination URL for the short link for Android device targeting.",
            "nullable": true,
            "type": "string",
          },
          "archived": {
            "default": false,
            "description": "Whether the short link is archived.",
            "type": "boolean",
          },
          "comments": {
            "description": "The comments for the short link.",
            "nullable": true,
            "type": "string",
          },
          "description": {
            "description": "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
            "nullable": true,
            "type": "string",
          },
          "doIndex": {
            "default": false,
            "description": "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex",
            "type": "boolean",
          },
          "domain": {
            "description": "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains).",
            "maxLength": 190,
            "type": "string",
          },
          "expiredUrl": {
            "description": "The URL to redirect to when the short link has expired.",
            "nullable": true,
            "type": "string",
          },
          "expiresAt": {
            "description": "The date and time when the short link will expire at.",
            "nullable": true,
            "type": "string",
          },
          "externalId": {
            "description": "This is the ID of the link in your database. If set, it can be used to identify the link in the future. Must be prefixed with `ext_` when passed as a query parameter.",
            "example": "123456",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "type": "string",
          },
          "geo": {
            "$ref": "#/components/schemas/linkGeoTargeting",
          },
          "image": {
            "description": "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
            "nullable": true,
            "type": "string",
          },
          "ios": {
            "description": "The iOS destination URL for the short link for iOS device targeting.",
            "nullable": true,
            "type": "string",
          },
          "key": {
            "description": "The short link slug. If not provided, a random 7-character slug will be generated.",
            "maxLength": 190,
            "type": "string",
          },
          "password": {
            "description": "The password required to access the destination URL of the short link.",
            "nullable": true,
            "type": "string",
          },
          "prefix": {
            "description": "The prefix of the short link slug for randomly-generated keys (e.g. if prefix is `/c/`, generated keys will be in the `/c/:key` format). Will be ignored if `key` is provided.",
            "type": "string",
          },
          "programId": {
            "description": "The ID of the program the short link is associated with.",
            "nullable": true,
            "type": "string",
          },
          "proxy": {
            "default": false,
            "description": "Whether the short link uses Custom Social Media Cards feature.",
            "type": "boolean",
          },
          "publicStats": {
            "default": false,
            "deprecated": true,
            "description": "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible.",
            "type": "boolean",
          },
          "ref": {
            "description": "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL.",
            "nullable": true,
            "type": "string",
          },
          "rewrite": {
            "default": false,
            "description": "Whether the short link uses link cloaking.",
            "type": "boolean",
          },
          "tagId": {
            "deprecated": true,
            "description": "The unique ID of the tag assigned to the short link. This field is deprecated â€“ use `tagIds` instead.",
            "nullable": true,
            "type": "string",
          },
          "tagIds": {
            "anyOf": [
              {
                "type": "string",
              },
              {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
            ],
            "description": "The unique IDs of the tags assigned to the short link.",
            "example": [
              "clux0rgak00011...",
            ],
          },
          "tagNames": {
            "anyOf": [
              {
                "type": "string",
              },
              {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
            ],
            "description": "The unique name of the tags assigned to the short link (case insensitive).",
          },
          "title": {
            "description": "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
            "nullable": true,
            "type": "string",
          },
          "trackConversion": {
            "default": false,
            "description": "Whether to track conversions for the short link.",
            "type": "boolean",
          },
          "url": {
            "description": "The destination URL of the short link.",
            "example": "https://google.com",
            "type": "string",
          },
          "utm_campaign": {
            "description": "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL.",
            "nullable": true,
            "type": "string",
          },
          "utm_content": {
            "description": "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL.",
            "nullable": true,
            "type": "string",
          },
          "utm_medium": {
            "description": "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL.",
            "nullable": true,
            "type": "string",
          },
          "utm_source": {
            "description": "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL.",
            "nullable": true,
            "type": "string",
          },
          "utm_term": {
            "description": "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL.",
            "nullable": true,
            "type": "string",
          },
          "video": {
            "description": "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
            "nullable": true,
            "type": "string",
          },
          "webhookIds": {
            "description": "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data.",
            "items": {
              "type": "string",
            },
            "nullable": true,
            "type": "array",
          },
        },
        "required": [
          "url",
        ],
        "type": "object",
      },
      "type": "array",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/links/bulk",
    "responseCode": "200",
    "schema": {
      "items": {
        "$ref": "#/components/schemas/LinkSchema",
      },
      "type": "array",
    },
    "type": "response",
  },
  {
    "contentType": "application/json",
    "method": "patch",
    "path": "/links/bulk",
    "schema": {
      "properties": {
        "data": {
          "properties": {
            "android": {
              "description": "The Android destination URL for the short link for Android device targeting.",
              "nullable": true,
              "type": "string",
            },
            "archived": {
              "default": false,
              "description": "Whether the short link is archived.",
              "type": "boolean",
            },
            "comments": {
              "description": "The comments for the short link.",
              "nullable": true,
              "type": "string",
            },
            "description": {
              "description": "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
              "nullable": true,
              "type": "string",
            },
            "doIndex": {
              "default": false,
              "description": "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex",
              "type": "boolean",
            },
            "expiredUrl": {
              "description": "The URL to redirect to when the short link has expired.",
              "nullable": true,
              "type": "string",
            },
            "expiresAt": {
              "description": "The date and time when the short link will expire at.",
              "nullable": true,
              "type": "string",
            },
            "geo": {
              "$ref": "#/components/schemas/linkGeoTargeting",
            },
            "image": {
              "description": "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
              "nullable": true,
              "type": "string",
            },
            "ios": {
              "description": "The iOS destination URL for the short link for iOS device targeting.",
              "nullable": true,
              "type": "string",
            },
            "password": {
              "description": "The password required to access the destination URL of the short link.",
              "nullable": true,
              "type": "string",
            },
            "programId": {
              "description": "The ID of the program the short link is associated with.",
              "nullable": true,
              "type": "string",
            },
            "proxy": {
              "default": false,
              "description": "Whether the short link uses Custom Social Media Cards feature.",
              "type": "boolean",
            },
            "publicStats": {
              "default": false,
              "deprecated": true,
              "description": "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible.",
              "type": "boolean",
            },
            "ref": {
              "description": "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL.",
              "nullable": true,
              "type": "string",
            },
            "rewrite": {
              "default": false,
              "description": "Whether the short link uses link cloaking.",
              "type": "boolean",
            },
            "tagId": {
              "deprecated": true,
              "description": "The unique ID of the tag assigned to the short link. This field is deprecated â€“ use `tagIds` instead.",
              "nullable": true,
              "type": "string",
            },
            "tagIds": {
              "anyOf": [
                {
                  "type": "string",
                },
                {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              ],
              "description": "The unique IDs of the tags assigned to the short link.",
              "example": [
                "clux0rgak00011...",
              ],
            },
            "tagNames": {
              "anyOf": [
                {
                  "type": "string",
                },
                {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              ],
              "description": "The unique name of the tags assigned to the short link (case insensitive).",
            },
            "title": {
              "description": "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
              "nullable": true,
              "type": "string",
            },
            "trackConversion": {
              "default": false,
              "description": "Whether to track conversions for the short link.",
              "type": "boolean",
            },
            "url": {
              "description": "The destination URL of the short link.",
              "example": "https://google.com",
              "type": "string",
            },
            "utm_campaign": {
              "description": "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL.",
              "nullable": true,
              "type": "string",
            },
            "utm_content": {
              "description": "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL.",
              "nullable": true,
              "type": "string",
            },
            "utm_medium": {
              "description": "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL.",
              "nullable": true,
              "type": "string",
            },
            "utm_source": {
              "description": "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL.",
              "nullable": true,
              "type": "string",
            },
            "utm_term": {
              "description": "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL.",
              "nullable": true,
              "type": "string",
            },
            "video": {
              "description": "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
              "nullable": true,
              "type": "string",
            },
            "webhookIds": {
              "description": "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data.",
              "items": {
                "type": "string",
              },
              "nullable": true,
              "type": "array",
            },
          },
          "type": "object",
        },
        "externalIds": {
          "default": [],
          "description": "The external IDs of the links to update as stored in your database.",
          "items": {
            "type": "string",
          },
          "maxItems": 100,
          "type": "array",
        },
        "linkIds": {
          "default": [],
          "description": "The IDs of the links to update. Takes precedence over `externalIds`.",
          "items": {
            "type": "string",
          },
          "maxItems": 100,
          "type": "array",
        },
      },
      "required": [
        "data",
      ],
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "patch",
    "path": "/links/bulk",
    "responseCode": "200",
    "schema": {
      "items": {
        "$ref": "#/components/schemas/LinkSchema",
      },
      "type": "array",
    },
    "type": "response",
  },
  {
    "contentType": "application/json",
    "method": "delete",
    "path": "/links/bulk",
    "responseCode": "200",
    "schema": {
      "properties": {
        "deletedCount": {
          "description": "The number of links deleted.",
          "type": "number",
        },
      },
      "required": [
        "deletedCount",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "method": "delete",
    "path": "/links/bulk",
    "schema": {
      "description": "Comma-separated list of link IDs to delete. Maximum of 100 IDs. Non-existing IDs will be ignored.",
      "example": [
        "clux0rgak00011...",
        "clux0rgak00022...",
      ],
      "items": {
        "type": "string",
      },
      "type": "array",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "put",
    "path": "/links/upsert",
    "schema": {
      "properties": {
        "android": {
          "description": "The Android destination URL for the short link for Android device targeting.",
          "nullable": true,
          "type": "string",
        },
        "archived": {
          "default": false,
          "description": "Whether the short link is archived.",
          "type": "boolean",
        },
        "comments": {
          "description": "The comments for the short link.",
          "nullable": true,
          "type": "string",
        },
        "description": {
          "description": "The custom link preview description (og:description). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "doIndex": {
          "default": false,
          "description": "Allow search engines to index your short link. Defaults to `false` if not provided. Learn more: https://d.to/noindex",
          "type": "boolean",
        },
        "domain": {
          "description": "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains).",
          "maxLength": 190,
          "type": "string",
        },
        "expiredUrl": {
          "description": "The URL to redirect to when the short link has expired.",
          "nullable": true,
          "type": "string",
        },
        "expiresAt": {
          "description": "The date and time when the short link will expire at.",
          "nullable": true,
          "type": "string",
        },
        "externalId": {
          "description": "This is the ID of the link in your database. If set, it can be used to identify the link in the future. Must be prefixed with `ext_` when passed as a query parameter.",
          "example": "123456",
          "maxLength": 255,
          "minLength": 1,
          "nullable": true,
          "type": "string",
        },
        "geo": {
          "$ref": "#/components/schemas/linkGeoTargeting",
        },
        "image": {
          "description": "The custom link preview image (og:image). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "ios": {
          "description": "The iOS destination URL for the short link for iOS device targeting.",
          "nullable": true,
          "type": "string",
        },
        "key": {
          "description": "The short link slug. If not provided, a random 7-character slug will be generated.",
          "maxLength": 190,
          "type": "string",
        },
        "password": {
          "description": "The password required to access the destination URL of the short link.",
          "nullable": true,
          "type": "string",
        },
        "prefix": {
          "description": "The prefix of the short link slug for randomly-generated keys (e.g. if prefix is `/c/`, generated keys will be in the `/c/:key` format). Will be ignored if `key` is provided.",
          "type": "string",
        },
        "programId": {
          "description": "The ID of the program the short link is associated with.",
          "nullable": true,
          "type": "string",
        },
        "proxy": {
          "default": false,
          "description": "Whether the short link uses Custom Social Media Cards feature.",
          "type": "boolean",
        },
        "publicStats": {
          "default": false,
          "deprecated": true,
          "description": "Deprecated: Use `dashboard` instead. Whether the short link's stats are publicly accessible.",
          "type": "boolean",
        },
        "ref": {
          "description": "The referral tag of the short link. If set, this will populate or override the `ref` query parameter in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "rewrite": {
          "default": false,
          "description": "Whether the short link uses link cloaking.",
          "type": "boolean",
        },
        "tagId": {
          "deprecated": true,
          "description": "The unique ID of the tag assigned to the short link. This field is deprecated â€“ use `tagIds` instead.",
          "nullable": true,
          "type": "string",
        },
        "tagIds": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          ],
          "description": "The unique IDs of the tags assigned to the short link.",
          "example": [
            "clux0rgak00011...",
          ],
        },
        "tagNames": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          ],
          "description": "The unique name of the tags assigned to the short link (case insensitive).",
        },
        "title": {
          "description": "The custom link preview title (og:title). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "trackConversion": {
          "default": false,
          "description": "Whether to track conversions for the short link.",
          "type": "boolean",
        },
        "url": {
          "description": "The destination URL of the short link.",
          "example": "https://google.com",
          "type": "string",
        },
        "utm_campaign": {
          "description": "The UTM campaign of the short link. If set, this will populate or override the UTM campaign in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_content": {
          "description": "The UTM content of the short link. If set, this will populate or override the UTM content in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_medium": {
          "description": "The UTM medium of the short link. If set, this will populate or override the UTM medium in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_source": {
          "description": "The UTM source of the short link. If set, this will populate or override the UTM source in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "utm_term": {
          "description": "The UTM term of the short link. If set, this will populate or override the UTM term in the destination URL.",
          "nullable": true,
          "type": "string",
        },
        "video": {
          "description": "The custom link preview video (og:video). Will be used for Custom Social Media Cards if `proxy` is true. Learn more: https://d.to/og",
          "nullable": true,
          "type": "string",
        },
        "webhookIds": {
          "description": "An array of webhook IDs to trigger when the link is clicked. These webhooks will receive click event data.",
          "items": {
            "type": "string",
          },
          "nullable": true,
          "type": "array",
        },
      },
      "required": [
        "url",
      ],
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "get",
    "path": "/analytics",
    "responseCode": "200",
    "schema": {
      "anyOf": [
        {
          "$ref": "#/components/schemas/AnalyticsCount",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsTimeseries",
          },
          "title": "AnalyticsTimeseries",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsContinents",
          },
          "title": "AnalyticsContinents",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsCountries",
          },
          "title": "AnalyticsCountries",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsCities",
          },
          "title": "AnalyticsCities",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsDevices",
          },
          "title": "AnalyticsDevices",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsBrowsers",
          },
          "title": "AnalyticsBrowsers",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsOS",
          },
          "title": "AnalyticsOS",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsTriggers",
          },
          "title": "AnalyticsTriggers",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsReferers",
          },
          "title": "AnalyticsReferers",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsRefererUrls",
          },
          "title": "AnalyticsRefererUrls",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsTopLinks",
          },
          "title": "AnalyticsTopLinks",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/AnalyticsTopUrls",
          },
          "title": "AnalyticsTopUrls",
          "type": "array",
        },
      ],
    },
    "type": "response",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "default": "clicks",
      "description": "The type of event to retrieve analytics for. Defaults to `clicks`.",
      "enum": [
        "clicks",
        "leads",
        "sales",
        "composite",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "default": "count",
      "description": "The parameter to group the analytics data points by. Defaults to `count` if undefined. Note that `trigger` is deprecated (use `triggers` instead), but kept for backwards compatibility.",
      "enum": [
        "count",
        "timeseries",
        "continents",
        "regions",
        "countries",
        "cities",
        "devices",
        "browsers",
        "os",
        "trigger",
        "triggers",
        "referers",
        "referer_urls",
        "top_links",
        "top_urls",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The domain to filter analytics for.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The short link slug.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The unique ID of the short link on Dub.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "This is the ID of the link in the your database. Must be prefixed with 'ext_' when passed as a query parameter.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The interval to retrieve analytics for. If undefined, defaults to 24h.",
      "enum": [
        "24h",
        "7d",
        "30d",
        "90d",
        "ytd",
        "1y",
        "all",
        "all_unfiltered",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The start date and time when to retrieve analytics from. Takes precedence over `interval`.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The end date and time when to retrieve analytics from. If not provided, defaults to the current date. Takes precedence over `interval`.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "default": "UTC",
      "description": "The IANA time zone code for aligning timeseries granularity (e.g. America/New_York). Defaults to UTC.",
      "example": "America/New_York",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The city to retrieve analytics for.",
      "example": "New York",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The device to retrieve analytics for.",
      "example": "Desktop",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The browser to retrieve analytics for.",
      "example": "Chrome",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The OS to retrieve analytics for.",
      "example": "Windows",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The trigger to retrieve analytics for. If undefined, return both QR and link clicks.",
      "enum": [
        "qr",
        "link",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The referer to retrieve analytics for.",
      "example": "google.com",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The full referer URL to retrieve analytics for.",
      "example": "https://dub.co/blog",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "The URL to retrieve analytics for.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "deprecated": true,
      "description": "Deprecated. Use `tagIds` instead. The tag ID to retrieve analytics for.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "anyOf": [
        {
          "type": "string",
        },
        {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
      ],
      "description": "The tag IDs to retrieve analytics for.",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "deprecated": true,
      "description": "Deprecated. Use the `trigger` field instead. Filter for QR code scans. If true, filter for QR codes only. If false, filter for links only. If undefined, return both.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/analytics",
    "schema": {
      "description": "Filter for root domains. If true, filter for domains only. If false, filter for links only. If undefined, return both.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "get",
    "path": "/events",
    "responseCode": "200",
    "schema": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/components/schemas/ClickEvent",
          },
          "title": "ClickEvents",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/LeadEvent",
          },
          "title": "LeadEvents",
          "type": "array",
        },
        {
          "items": {
            "$ref": "#/components/schemas/SaleEvent",
          },
          "title": "SaleEvents",
          "type": "array",
        },
      ],
    },
    "type": "response",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "default": "clicks",
      "description": "The type of event to retrieve analytics for. Defaults to 'clicks'.",
      "enum": [
        "clicks",
        "leads",
        "sales",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The domain to filter analytics for.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The short link slug.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The unique ID of the short link on Dub.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "This is the ID of the link in the your database. Must be prefixed with 'ext_' when passed as a query parameter.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "default": "24h",
      "description": "The interval to retrieve events for. Takes precedence over start and end. If undefined, defaults to 24h.",
      "enum": [
        "24h",
        "7d",
        "30d",
        "90d",
        "ytd",
        "1y",
        "all",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The start date and time when to retrieve analytics from. Takes precedence over `interval`.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The end date and time when to retrieve analytics from. If not provided, defaults to the current date. Takes precedence over `interval`.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "default": "UTC",
      "description": "The IANA time zone code for aligning timeseries granularity (e.g. America/New_York). Defaults to UTC.",
      "example": "America/New_York",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The city to retrieve analytics for.",
      "example": "New York",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The device to retrieve analytics for.",
      "example": "Desktop",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The browser to retrieve analytics for.",
      "example": "Chrome",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The OS to retrieve analytics for.",
      "example": "Windows",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The trigger to retrieve analytics for. If undefined, return both QR and link clicks.",
      "enum": [
        "qr",
        "link",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The referer to retrieve analytics for.",
      "example": "google.com",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The full referer URL to retrieve analytics for.",
      "example": "https://dub.co/blog",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "The URL to retrieve analytics for.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "deprecated": true,
      "description": "Deprecated. Use `tagIds` instead. The tag ID to retrieve analytics for.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "anyOf": [
        {
          "type": "string",
        },
        {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
      ],
      "description": "The tag IDs to retrieve analytics for.",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "deprecated": true,
      "description": "Deprecated. Use the `trigger` field instead. Filter for QR code scans. If true, filter for QR codes only. If false, filter for links only. If undefined, return both.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "description": "Filter for root domains. If true, filter for domains only. If false, filter for links only. If undefined, return both.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "default": 1,
      "type": "number",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "default": 100,
      "type": "number",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "default": "desc",
      "enum": [
        "asc",
        "desc",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/events",
    "schema": {
      "default": "timestamp",
      "enum": [
        "timestamp",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/tags",
    "schema": {
      "properties": {
        "color": {
          "description": "The color of the tag. If not provided, a random color will be used from the list: red, yellow, green, blue, purple, pink, brown.",
          "enum": [
            "red",
            "yellow",
            "green",
            "blue",
            "purple",
            "pink",
            "brown",
          ],
          "type": "string",
        },
        "name": {
          "description": "The name of the tag to create.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string",
        },
        "tag": {
          "deprecated": true,
          "description": "The name of the tag to create.",
          "minLength": 1,
          "type": "string",
        },
      },
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "get",
    "path": "/tags",
    "responseCode": "200",
    "schema": {
      "items": {
        "$ref": "#/components/schemas/TagSchema",
      },
      "type": "array",
    },
    "type": "response",
  },
  {
    "contentType": "application/json",
    "method": "patch",
    "path": "/tags/{id}",
    "schema": {
      "properties": {
        "color": {
          "description": "The color of the tag. If not provided, a random color will be used from the list: red, yellow, green, blue, purple, pink, brown.",
          "enum": [
            "red",
            "yellow",
            "green",
            "blue",
            "purple",
            "pink",
            "brown",
          ],
          "type": "string",
        },
        "name": {
          "description": "The name of the tag to create.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string",
        },
        "tag": {
          "deprecated": true,
          "description": "The name of the tag to create.",
          "minLength": 1,
          "type": "string",
        },
      },
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "method": "patch",
    "path": "/tags/{id}",
    "schema": {
      "description": "The ID of the tag to update.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "delete",
    "path": "/tags/{id}",
    "responseCode": "200",
    "schema": {
      "properties": {
        "id": {
          "description": "The ID of the deleted tag.",
          "type": "string",
        },
      },
      "required": [
        "id",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "method": "delete",
    "path": "/tags/{id}",
    "schema": {
      "description": "The ID of the tag to delete.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/domains",
    "schema": {
      "properties": {
        "archived": {
          "default": false,
          "description": "Whether to archive this domain. `false` will unarchive a previously archived domain.",
          "example": false,
          "type": "boolean",
        },
        "expiredUrl": {
          "description": "Redirect users to a specific URL when any link under this domain has expired.",
          "example": "https://acme.com/expired",
          "nullable": true,
          "type": "string",
        },
        "logo": {
          "description": "The logo of the domain.",
          "nullable": true,
          "type": "string",
        },
        "notFoundUrl": {
          "description": "Redirect users to a specific URL when a link under this domain doesn't exist.",
          "example": "https://acme.com/not-found",
          "nullable": true,
          "type": "string",
        },
        "placeholder": {
          "description": "Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.",
          "example": "https://dub.co/help/article/what-is-dub",
          "maxLength": 100,
          "nullable": true,
          "type": "string",
        },
        "slug": {
          "description": "Name of the domain.",
          "example": "acme.com",
          "maxLength": 190,
          "minLength": 1,
          "type": "string",
        },
      },
      "required": [
        "slug",
      ],
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "get",
    "path": "/domains",
    "responseCode": "200",
    "schema": {
      "items": {
        "$ref": "#/components/schemas/DomainSchema",
      },
      "type": "array",
    },
    "type": "response",
  },
  {
    "method": "get",
    "path": "/domains",
    "schema": {
      "default": "false",
      "description": "Whether to include archived domains in the response. Defaults to `false` if not provided.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/domains",
    "schema": {
      "description": "The search term to filter the domains by.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/domains",
    "schema": {
      "default": 1,
      "description": "The page number for pagination.",
      "example": 1,
      "exclusiveMinimum": true,
      "minimum": 0,
      "type": "number",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/domains",
    "schema": {
      "default": 50,
      "description": "The number of items per page.",
      "example": 50,
      "exclusiveMinimum": true,
      "maximum": 50,
      "minimum": 0,
      "type": "number",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "patch",
    "path": "/domains/{slug}",
    "schema": {
      "properties": {
        "archived": {
          "default": false,
          "description": "Whether to archive this domain. `false` will unarchive a previously archived domain.",
          "example": false,
          "type": "boolean",
        },
        "expiredUrl": {
          "description": "Redirect users to a specific URL when any link under this domain has expired.",
          "example": "https://acme.com/expired",
          "nullable": true,
          "type": "string",
        },
        "logo": {
          "description": "The logo of the domain.",
          "nullable": true,
          "type": "string",
        },
        "notFoundUrl": {
          "description": "Redirect users to a specific URL when a link under this domain doesn't exist.",
          "example": "https://acme.com/not-found",
          "nullable": true,
          "type": "string",
        },
        "placeholder": {
          "description": "Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.",
          "example": "https://dub.co/help/article/what-is-dub",
          "maxLength": 100,
          "nullable": true,
          "type": "string",
        },
        "slug": {
          "description": "Name of the domain.",
          "example": "acme.com",
          "maxLength": 190,
          "minLength": 1,
          "type": "string",
        },
      },
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "method": "patch",
    "path": "/domains/{slug}",
    "schema": {
      "description": "The domain name.",
      "example": "acme.com",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "delete",
    "path": "/domains/{slug}",
    "responseCode": "200",
    "schema": {
      "properties": {
        "slug": {
          "description": "The domain name.",
          "example": "acme.com",
          "type": "string",
        },
      },
      "required": [
        "slug",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "method": "delete",
    "path": "/domains/{slug}",
    "schema": {
      "description": "The domain name.",
      "example": "acme.com",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/track/lead",
    "schema": {
      "properties": {
        "clickId": {
          "description": "The ID of the click in th Dub. You can read this value from `dub_id` cookie.",
          "minLength": 1,
          "type": "string",
        },
        "customerAvatar": {
          "default": null,
          "description": "Avatar of the customer in the client's app.",
          "nullable": true,
          "type": "string",
        },
        "customerEmail": {
          "default": null,
          "description": "Email of the customer in the client's app.",
          "format": "email",
          "maxLength": 100,
          "nullable": true,
          "type": "string",
        },
        "customerId": {
          "default": null,
          "deprecated": true,
          "description": "This is the unique identifier for the customer in the client's app. This is used to track the customer's journey.",
          "maxLength": 100,
          "nullable": true,
          "type": "string",
        },
        "customerName": {
          "default": null,
          "description": "Name of the customer in the client's app.",
          "maxLength": 100,
          "nullable": true,
          "type": "string",
        },
        "eventName": {
          "description": "The name of the event to track.",
          "example": "Sign up",
          "maxLength": 50,
          "minLength": 1,
          "type": "string",
        },
        "externalId": {
          "default": "",
          "description": "This is the unique identifier for the customer in the client's app. This is used to track the customer's journey.",
          "maxLength": 100,
          "type": "string",
        },
        "metadata": {
          "additionalProperties": {},
          "default": null,
          "description": "Additional metadata to be stored with the lead event",
          "nullable": true,
          "type": "object",
        },
      },
      "required": [
        "clickId",
        "eventName",
      ],
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/track/lead",
    "responseCode": "200",
    "schema": {
      "properties": {
        "click": {
          "properties": {
            "id": {
              "type": "string",
            },
          },
          "required": [
            "id",
          ],
          "type": "object",
        },
        "customer": {
          "properties": {
            "avatar": {
              "nullable": true,
              "type": "string",
            },
            "email": {
              "nullable": true,
              "type": "string",
            },
            "externalId": {
              "nullable": true,
              "type": "string",
            },
            "name": {
              "nullable": true,
              "type": "string",
            },
          },
          "required": [
            "name",
            "email",
            "avatar",
            "externalId",
          ],
          "type": "object",
        },
      },
      "required": [
        "click",
        "customer",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/track/sale",
    "schema": {
      "properties": {
        "amount": {
          "description": "The amount of the sale. Should be passed in cents.",
          "minimum": 0,
          "type": "integer",
        },
        "currency": {
          "default": "usd",
          "description": "The currency of the sale. Accepts ISO 4217 currency codes.",
          "type": "string",
        },
        "customerId": {
          "default": null,
          "deprecated": true,
          "description": "This is the unique identifier for the customer in the client's app. This is used to track the customer's journey.",
          "maxLength": 100,
          "nullable": true,
          "type": "string",
        },
        "eventName": {
          "default": "Purchase",
          "description": "The name of the sale event. It can be used to track different types of event for example 'Purchase', 'Upgrade', 'Payment', etc.",
          "example": "Purchase",
          "maxLength": 50,
          "type": "string",
        },
        "externalId": {
          "default": "",
          "description": "This is the unique identifier for the customer in the client's app. This is used to track the customer's journey.",
          "maxLength": 100,
          "type": "string",
        },
        "invoiceId": {
          "default": null,
          "description": "The invoice ID of the sale.",
          "nullable": true,
          "type": "string",
        },
        "metadata": {
          "additionalProperties": {},
          "default": null,
          "description": "Additional metadata to be stored with the sale event.",
          "nullable": true,
          "type": "object",
        },
        "paymentProcessor": {
          "description": "The payment processor via which the sale was made.",
          "enum": [
            "stripe",
            "shopify",
            "paddle",
          ],
          "type": "string",
        },
      },
      "required": [
        "amount",
        "paymentProcessor",
      ],
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/track/sale",
    "responseCode": "200",
    "schema": {
      "properties": {
        "customer": {
          "properties": {
            "avatar": {
              "nullable": true,
              "type": "string",
            },
            "email": {
              "nullable": true,
              "type": "string",
            },
            "externalId": {
              "nullable": true,
              "type": "string",
            },
            "id": {
              "type": "string",
            },
            "name": {
              "nullable": true,
              "type": "string",
            },
          },
          "required": [
            "id",
            "name",
            "email",
            "avatar",
            "externalId",
          ],
          "type": "object",
        },
        "eventName": {
          "type": "string",
        },
        "sale": {
          "properties": {
            "amount": {
              "type": "number",
            },
            "currency": {
              "type": "string",
            },
            "invoiceId": {
              "nullable": true,
              "type": "string",
            },
            "metadata": {
              "additionalProperties": {},
              "nullable": true,
              "type": "object",
            },
            "paymentProcessor": {
              "type": "string",
            },
          },
          "required": [
            "amount",
            "currency",
            "paymentProcessor",
            "invoiceId",
            "metadata",
          ],
          "type": "object",
        },
      },
      "required": [
        "eventName",
        "customer",
        "sale",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "contentType": "application/json",
    "method": "get",
    "path": "/customers",
    "responseCode": "200",
    "schema": {
      "items": {
        "properties": {
          "avatar": {
            "description": "Avatar URL of the customer.",
            "nullable": true,
            "type": "string",
          },
          "country": {
            "description": "Country of the customer.",
            "nullable": true,
            "type": "string",
          },
          "createdAt": {
            "description": "The date the customer was created.",
            "type": "string",
          },
          "discount": {
            "nullable": true,
            "properties": {
              "amount": {
                "type": "number",
              },
              "couponId": {
                "nullable": true,
                "type": "string",
              },
              "couponTestId": {
                "nullable": true,
                "type": "string",
              },
              "duration": {
                "nullable": true,
                "type": "number",
              },
              "id": {
                "type": "string",
              },
              "interval": {
                "enum": [
                  "month",
                  "year",
                  null,
                ],
                "nullable": true,
                "type": "string",
              },
              "type": {
                "enum": [
                  "percentage",
                  "flat",
                ],
                "type": "string",
              },
            },
            "required": [
              "id",
              "couponId",
              "couponTestId",
              "amount",
              "type",
              "duration",
              "interval",
            ],
            "type": "object",
          },
          "email": {
            "description": "Email of the customer.",
            "nullable": true,
            "type": "string",
          },
          "externalId": {
            "description": "Unique identifier for the customer in the client's app.",
            "type": "string",
          },
          "id": {
            "description": "The unique identifier of the customer in Dub.",
            "type": "string",
          },
          "link": {
            "nullable": true,
            "properties": {
              "domain": {
                "description": "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains).",
                "type": "string",
              },
              "id": {
                "description": "The unique ID of the short link.",
                "type": "string",
              },
              "key": {
                "description": "The short link slug. If not provided, a random 7-character slug will be generated.",
                "type": "string",
              },
              "programId": {
                "description": "The ID of the program the short link is associated with.",
                "nullable": true,
                "type": "string",
              },
              "shortLink": {
                "description": "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`).",
                "format": "uri",
                "type": "string",
              },
            },
            "required": [
              "id",
              "domain",
              "key",
              "shortLink",
              "programId",
            ],
            "type": "object",
          },
          "name": {
            "description": "Name of the customer.",
            "type": "string",
          },
          "partner": {
            "nullable": true,
            "properties": {
              "email": {
                "type": "string",
              },
              "id": {
                "type": "string",
              },
              "image": {
                "nullable": true,
                "type": "string",
              },
              "name": {
                "type": "string",
              },
            },
            "required": [
              "id",
              "name",
              "email",
            ],
            "type": "object",
          },
        },
        "required": [
          "id",
          "externalId",
          "name",
          "createdAt",
        ],
        "type": "object",
      },
      "type": "array",
    },
    "type": "response",
  },
  {
    "method": "get",
    "path": "/customers",
    "schema": {
      "description": "A case-sensitive filter on the list based on the customer's `email` field. The value must be a string.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/customers",
    "schema": {
      "description": "A case-sensitive filter on the list based on the customer's `externalId` field. The value must be a string.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/customers",
    "schema": {
      "description": "Whether to include expanded fields on the customer (`link`, `partner`, `discount`).",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/customers",
    "schema": {
      "properties": {
        "avatar": {
          "description": "Avatar URL of the customer in the client's app.",
          "format": "uri",
          "nullable": true,
          "type": "string",
        },
        "email": {
          "description": "Email of the customer in the client's app.",
          "format": "email",
          "nullable": true,
          "type": "string",
        },
        "externalId": {
          "description": "Unique identifier for the customer in the client's app.",
          "type": "string",
        },
        "name": {
          "description": "Name of the customer in the client's app. If not provided, a random name will be generated.",
          "nullable": true,
          "type": "string",
        },
      },
      "required": [
        "externalId",
      ],
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/customers",
    "responseCode": "201",
    "schema": {
      "properties": {
        "avatar": {
          "description": "Avatar URL of the customer.",
          "nullable": true,
          "type": "string",
        },
        "country": {
          "description": "Country of the customer.",
          "nullable": true,
          "type": "string",
        },
        "createdAt": {
          "description": "The date the customer was created.",
          "type": "string",
        },
        "discount": {
          "nullable": true,
          "properties": {
            "amount": {
              "type": "number",
            },
            "couponId": {
              "nullable": true,
              "type": "string",
            },
            "couponTestId": {
              "nullable": true,
              "type": "string",
            },
            "duration": {
              "nullable": true,
              "type": "number",
            },
            "id": {
              "type": "string",
            },
            "interval": {
              "enum": [
                "month",
                "year",
                null,
              ],
              "nullable": true,
              "type": "string",
            },
            "type": {
              "enum": [
                "percentage",
                "flat",
              ],
              "type": "string",
            },
          },
          "required": [
            "id",
            "couponId",
            "couponTestId",
            "amount",
            "type",
            "duration",
            "interval",
          ],
          "type": "object",
        },
        "email": {
          "description": "Email of the customer.",
          "nullable": true,
          "type": "string",
        },
        "externalId": {
          "description": "Unique identifier for the customer in the client's app.",
          "type": "string",
        },
        "id": {
          "description": "The unique identifier of the customer in Dub.",
          "type": "string",
        },
        "link": {
          "nullable": true,
          "properties": {
            "domain": {
              "description": "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains).",
              "type": "string",
            },
            "id": {
              "description": "The unique ID of the short link.",
              "type": "string",
            },
            "key": {
              "description": "The short link slug. If not provided, a random 7-character slug will be generated.",
              "type": "string",
            },
            "programId": {
              "description": "The ID of the program the short link is associated with.",
              "nullable": true,
              "type": "string",
            },
            "shortLink": {
              "description": "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`).",
              "format": "uri",
              "type": "string",
            },
          },
          "required": [
            "id",
            "domain",
            "key",
            "shortLink",
            "programId",
          ],
          "type": "object",
        },
        "name": {
          "description": "Name of the customer.",
          "type": "string",
        },
        "partner": {
          "nullable": true,
          "properties": {
            "email": {
              "type": "string",
            },
            "id": {
              "type": "string",
            },
            "image": {
              "nullable": true,
              "type": "string",
            },
            "name": {
              "type": "string",
            },
          },
          "required": [
            "id",
            "name",
            "email",
          ],
          "type": "object",
        },
      },
      "required": [
        "id",
        "externalId",
        "name",
        "createdAt",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "contentType": "application/json",
    "method": "get",
    "path": "/customers/{id}",
    "responseCode": "200",
    "schema": {
      "properties": {
        "avatar": {
          "description": "Avatar URL of the customer.",
          "nullable": true,
          "type": "string",
        },
        "country": {
          "description": "Country of the customer.",
          "nullable": true,
          "type": "string",
        },
        "createdAt": {
          "description": "The date the customer was created.",
          "type": "string",
        },
        "discount": {
          "nullable": true,
          "properties": {
            "amount": {
              "type": "number",
            },
            "couponId": {
              "nullable": true,
              "type": "string",
            },
            "couponTestId": {
              "nullable": true,
              "type": "string",
            },
            "duration": {
              "nullable": true,
              "type": "number",
            },
            "id": {
              "type": "string",
            },
            "interval": {
              "enum": [
                "month",
                "year",
                null,
              ],
              "nullable": true,
              "type": "string",
            },
            "type": {
              "enum": [
                "percentage",
                "flat",
              ],
              "type": "string",
            },
          },
          "required": [
            "id",
            "couponId",
            "couponTestId",
            "amount",
            "type",
            "duration",
            "interval",
          ],
          "type": "object",
        },
        "email": {
          "description": "Email of the customer.",
          "nullable": true,
          "type": "string",
        },
        "externalId": {
          "description": "Unique identifier for the customer in the client's app.",
          "type": "string",
        },
        "id": {
          "description": "The unique identifier of the customer in Dub.",
          "type": "string",
        },
        "link": {
          "nullable": true,
          "properties": {
            "domain": {
              "description": "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains).",
              "type": "string",
            },
            "id": {
              "description": "The unique ID of the short link.",
              "type": "string",
            },
            "key": {
              "description": "The short link slug. If not provided, a random 7-character slug will be generated.",
              "type": "string",
            },
            "programId": {
              "description": "The ID of the program the short link is associated with.",
              "nullable": true,
              "type": "string",
            },
            "shortLink": {
              "description": "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`).",
              "format": "uri",
              "type": "string",
            },
          },
          "required": [
            "id",
            "domain",
            "key",
            "shortLink",
            "programId",
          ],
          "type": "object",
        },
        "name": {
          "description": "Name of the customer.",
          "type": "string",
        },
        "partner": {
          "nullable": true,
          "properties": {
            "email": {
              "type": "string",
            },
            "id": {
              "type": "string",
            },
            "image": {
              "nullable": true,
              "type": "string",
            },
            "name": {
              "type": "string",
            },
          },
          "required": [
            "id",
            "name",
            "email",
          ],
          "type": "object",
        },
      },
      "required": [
        "id",
        "externalId",
        "name",
        "createdAt",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "method": "get",
    "path": "/customers/{id}",
    "schema": {
      "description": "The unique identifier of the customer in Dub.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/customers/{id}",
    "schema": {
      "description": "Whether to include expanded fields on the customer (`link`, `partner`, `discount`).",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "patch",
    "path": "/customers/{id}",
    "schema": {
      "properties": {
        "avatar": {
          "description": "Avatar URL of the customer in the client's app.",
          "format": "uri",
          "nullable": true,
          "type": "string",
        },
        "email": {
          "description": "Email of the customer in the client's app.",
          "format": "email",
          "nullable": true,
          "type": "string",
        },
        "externalId": {
          "description": "Unique identifier for the customer in the client's app.",
          "type": "string",
        },
        "name": {
          "description": "Name of the customer in the client's app. If not provided, a random name will be generated.",
          "nullable": true,
          "type": "string",
        },
      },
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "patch",
    "path": "/customers/{id}",
    "responseCode": "200",
    "schema": {
      "properties": {
        "avatar": {
          "description": "Avatar URL of the customer.",
          "nullable": true,
          "type": "string",
        },
        "country": {
          "description": "Country of the customer.",
          "nullable": true,
          "type": "string",
        },
        "createdAt": {
          "description": "The date the customer was created.",
          "type": "string",
        },
        "discount": {
          "nullable": true,
          "properties": {
            "amount": {
              "type": "number",
            },
            "couponId": {
              "nullable": true,
              "type": "string",
            },
            "couponTestId": {
              "nullable": true,
              "type": "string",
            },
            "duration": {
              "nullable": true,
              "type": "number",
            },
            "id": {
              "type": "string",
            },
            "interval": {
              "enum": [
                "month",
                "year",
                null,
              ],
              "nullable": true,
              "type": "string",
            },
            "type": {
              "enum": [
                "percentage",
                "flat",
              ],
              "type": "string",
            },
          },
          "required": [
            "id",
            "couponId",
            "couponTestId",
            "amount",
            "type",
            "duration",
            "interval",
          ],
          "type": "object",
        },
        "email": {
          "description": "Email of the customer.",
          "nullable": true,
          "type": "string",
        },
        "externalId": {
          "description": "Unique identifier for the customer in the client's app.",
          "type": "string",
        },
        "id": {
          "description": "The unique identifier of the customer in Dub.",
          "type": "string",
        },
        "link": {
          "nullable": true,
          "properties": {
            "domain": {
              "description": "The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains).",
              "type": "string",
            },
            "id": {
              "description": "The unique ID of the short link.",
              "type": "string",
            },
            "key": {
              "description": "The short link slug. If not provided, a random 7-character slug will be generated.",
              "type": "string",
            },
            "programId": {
              "description": "The ID of the program the short link is associated with.",
              "nullable": true,
              "type": "string",
            },
            "shortLink": {
              "description": "The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`).",
              "format": "uri",
              "type": "string",
            },
          },
          "required": [
            "id",
            "domain",
            "key",
            "shortLink",
            "programId",
          ],
          "type": "object",
        },
        "name": {
          "description": "Name of the customer.",
          "type": "string",
        },
        "partner": {
          "nullable": true,
          "properties": {
            "email": {
              "type": "string",
            },
            "id": {
              "type": "string",
            },
            "image": {
              "nullable": true,
              "type": "string",
            },
            "name": {
              "type": "string",
            },
          },
          "required": [
            "id",
            "name",
            "email",
          ],
          "type": "object",
        },
      },
      "required": [
        "id",
        "externalId",
        "name",
        "createdAt",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "method": "patch",
    "path": "/customers/{id}",
    "schema": {
      "description": "The unique identifier of the customer in Dub.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "patch",
    "path": "/customers/{id}",
    "schema": {
      "description": "Whether to include expanded fields on the customer (`link`, `partner`, `discount`).",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "delete",
    "path": "/customers/{id}",
    "responseCode": "200",
    "schema": {
      "properties": {
        "id": {
          "description": "The unique identifier of the customer in Dub.",
          "type": "string",
        },
      },
      "required": [
        "id",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "method": "delete",
    "path": "/customers/{id}",
    "schema": {
      "description": "The unique identifier of the customer in Dub.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/workspaces/{idOrSlug}",
    "schema": {
      "description": "The ID or slug of the workspace.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "patch",
    "path": "/workspaces/{idOrSlug}",
    "schema": {
      "properties": {
        "logo": {
          "type": "string",
        },
        "name": {
          "maxLength": 32,
          "minLength": 1,
          "type": "string",
        },
        "slug": {
          "maxLength": 48,
          "minLength": 3,
          "type": "string",
        },
      },
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "method": "patch",
    "path": "/workspaces/{idOrSlug}",
    "schema": {
      "description": "The ID or slug of the workspace to update.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/tokens/embed",
    "schema": {
      "properties": {
        "linkId": {
          "minLength": 1,
          "type": "string",
        },
      },
      "required": [
        "linkId",
      ],
      "type": "object",
    },
    "type": "requestBody",
  },
  {
    "contentType": "application/json",
    "method": "post",
    "path": "/tokens/embed",
    "responseCode": "201",
    "schema": {
      "properties": {
        "expires": {
          "type": "string",
        },
        "publicToken": {
          "type": "string",
        },
      },
      "required": [
        "publicToken",
        "expires",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "contentType": "image/png",
    "method": "get",
    "path": "/qr",
    "responseCode": "200",
    "schema": {
      "type": "string",
    },
    "type": "response",
  },
  {
    "method": "get",
    "path": "/qr",
    "schema": {
      "description": "The URL to generate a QR code for.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/qr",
    "schema": {
      "description": "The logo to include in the QR code. Can only be used with a paid plan on Dub.co.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/qr",
    "schema": {
      "default": 600,
      "description": "The size of the QR code in pixels. Defaults to `600` if not provided.",
      "type": "number",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/qr",
    "schema": {
      "default": "L",
      "description": "The level of error correction to use for the QR code. Defaults to `L` if not provided.",
      "enum": [
        "L",
        "M",
        "Q",
        "H",
      ],
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/qr",
    "schema": {
      "default": "#000000",
      "description": "The foreground color of the QR code in hex format. Defaults to `#000000` if not provided.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/qr",
    "schema": {
      "default": "#FFFFFF",
      "description": "The background color of the QR code in hex format. Defaults to `#ffffff` if not provided.",
      "type": "string",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/qr",
    "schema": {
      "default": "false",
      "description": "Whether to hide the logo in the QR code. Can only be used with a paid plan on Dub.co.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/qr",
    "schema": {
      "default": 2,
      "description": "The size of the margin around the QR code. Defaults to 2 if not provided.",
      "type": "number",
    },
    "type": "parameter",
  },
  {
    "method": "get",
    "path": "/qr",
    "schema": {
      "default": "true",
      "deprecated": true,
      "description": "DEPRECATED: Margin is included by default. Use the `margin` prop to customize the margin size.",
      "type": "boolean",
    },
    "type": "parameter",
  },
  {
    "contentType": "application/json",
    "method": "get",
    "path": "/metatags",
    "responseCode": "200",
    "schema": {
      "properties": {
        "description": {
          "description": "The meta description tag for the URL.",
          "example": "Dub.co is the open-source link management infrastructure ...",
          "nullable": true,
          "type": "string",
        },
        "image": {
          "description": "The OpenGraph image for the URL.",
          "example": "https://assets.dub.co/thumbnail.jpg",
          "nullable": true,
          "type": "string",
        },
        "title": {
          "description": "The meta title tag for the URL.",
          "example": "Dub.co - Link Management for Modern Marketing Teams",
          "nullable": true,
          "type": "string",
        },
      },
      "required": [
        "title",
        "description",
        "image",
      ],
      "type": "object",
    },
    "type": "response",
  },
  {
    "method": "get",
    "path": "/metatags",
    "schema": {
      "description": "The URL to retrieve metatags for.",
      "example": "https://dub.co",
      "type": "string",
    },
    "type": "parameter",
  },
]